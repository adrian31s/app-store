---
openapi: 3.0.3
info:
  title: app-store API
  version: 1.0-SNAPSHOT
servers:
- url: http://localhost:30001
paths:
  /address/all:
    get:
      tags:
      - Address Api
      description: get all addresses
      operationId: getAllAddresses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressDTO'
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /address/getAddressById/id/{id}:
    get:
      tags:
      - Address Api
      description: get address by id
      operationId: getAddressById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  province:
                    type: string
                  zipCode:
                    type: string
                  streetName:
                    type: string
                  buildingNumber:
                    type: string
                  apartmentNumber:
                    format: int32
                    type: integer
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /address/updateAddressById/id/{id}:
    patch:
      tags:
      - Address Api
      description: update address by id
      operationId: updateAddressById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        "204":
          description: NO CONTENT
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /auth/login:
    post:
      tags:
      - Login
      description: login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: NOT AUTHORIZED
  /auth/testUserResource:
    get:
      tags:
      - Login
      description: return sample text if authorized
      operationId: testUserResource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: NOT AUTHORIZED
        "403":
          description: Not Allowed
  /bucket/getActiveBucketAssignedToPerson:
    get:
      tags:
      - Bucket Api
      description: get active bucket which can be modified assigned to person
      operationId: getActiveBucketAssignedToPerson
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  archived:
                    type: boolean
                  productOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductOrderDTO'
                  personId:
                    format: int64
                    type: integer
                  orderId:
                    format: int64
                    type: integer
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /person/getAll:
    get:
      tags:
      - Person Api
      description: get all people
      operationId: getAllPeople
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonDTO'
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /person/getById:
    get:
      tags:
      - Person Api
      description: get person
      operationId: getPerson
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddressDTO'
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /person/update:
    patch:
      tags:
      - Person Api
      description: update person
      operationId: updatePerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddressDTO'
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /product/create:
    post:
      tags:
      - Product Api
      description: create product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  thumbnail:
                    type: string
                  pictures:
                    type: string
                  productCategory:
                    $ref: '#/components/schemas/ProductCategory'
                  name:
                    type: string
                  producer:
                    type: string
                  guarantee:
                    type: string
                  model:
                    type: string
                  price:
                    format: double
                    type: number
                  quantity:
                    format: int32
                    type: integer
                  rate:
                    format: float
                    type: number
                  charger:
                    $ref: '#/components/schemas/ChargerDTO'
                  cooler:
                    $ref: '#/components/schemas/CoolerDTO'
                  dramMemory:
                    $ref: '#/components/schemas/DRAMMemoryDTO'
                  graphicCard:
                    $ref: '#/components/schemas/GraphicCardDTO'
                  hardDrive:
                    $ref: '#/components/schemas/HardDriveDTO'
                  motherboard:
                    $ref: '#/components/schemas/MotherboardDTO'
                  pcCase:
                    $ref: '#/components/schemas/PcCaseDTO'
                  processor:
                    $ref: '#/components/schemas/ProcessorDTO'
                  opinions:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpinionDto'
  /product/getAll:
    get:
      tags:
      - Product Api
      description: get all products
      operationId: getProducts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDTO'
  /product/getById/id/{id}:
    get:
      tags:
      - Product Api
      description: get product by id
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  thumbnail:
                    type: string
                  pictures:
                    type: string
                  productCategory:
                    $ref: '#/components/schemas/ProductCategory'
                  name:
                    type: string
                  producer:
                    type: string
                  guarantee:
                    type: string
                  model:
                    type: string
                  price:
                    format: double
                    type: number
                  quantity:
                    format: int32
                    type: integer
                  productOrders:
                    uniqueItems: true
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductOrder'
                  charger:
                    $ref: '#/components/schemas/Charger'
                  cooler:
                    $ref: '#/components/schemas/Cooler'
                  dramMemory:
                    $ref: '#/components/schemas/DRAMMemory'
                  graphicCard:
                    $ref: '#/components/schemas/GraphicCard'
                  hardDrive:
                    $ref: '#/components/schemas/HardDrive'
                  motherboard:
                    $ref: '#/components/schemas/Motherboard'
                  pcCase:
                    $ref: '#/components/schemas/PcCase'
                  processor:
                    $ref: '#/components/schemas/Processor'
                  rate:
                    format: float
                    type: number
                  thumbnailAsByte:
                    type: string
                  picturesAsBytes:
                    type: string
  /product/getBySearchCriteria:
    post:
      tags:
      - Product Api
      description: get products by search criteria
      operationId: getProductsBySearchCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductEnhancedSearchCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDTO'
  /product/updateBaseById/id/{id}:
    put:
      tags:
      - Product Api
      description: update product base attributes by id
      operationId: updateProductBaseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSearchCriteria'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  thumbnail:
                    type: string
                  pictures:
                    type: string
                  productCategory:
                    $ref: '#/components/schemas/ProductCategory'
                  name:
                    type: string
                  producer:
                    type: string
                  guarantee:
                    type: string
                  model:
                    type: string
                  price:
                    format: double
                    type: number
                  quantity:
                    format: int32
                    type: integer
                  rate:
                    format: float
                    type: number
                  charger:
                    $ref: '#/components/schemas/ChargerDTO'
                  cooler:
                    $ref: '#/components/schemas/CoolerDTO'
                  dramMemory:
                    $ref: '#/components/schemas/DRAMMemoryDTO'
                  graphicCard:
                    $ref: '#/components/schemas/GraphicCardDTO'
                  hardDrive:
                    $ref: '#/components/schemas/HardDriveDTO'
                  motherboard:
                    $ref: '#/components/schemas/MotherboardDTO'
                  pcCase:
                    $ref: '#/components/schemas/PcCaseDTO'
                  processor:
                    $ref: '#/components/schemas/ProcessorDTO'
                  opinions:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpinionDto'
  /product/updateProductWithDetails:
    put:
      tags:
      - Product Api
      description: update product with details by id
      operationId: updateProductWithDetailsById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  thumbnail:
                    type: string
                  pictures:
                    type: string
                  productCategory:
                    $ref: '#/components/schemas/ProductCategory'
                  name:
                    type: string
                  producer:
                    type: string
                  guarantee:
                    type: string
                  model:
                    type: string
                  price:
                    format: double
                    type: number
                  quantity:
                    format: int32
                    type: integer
                  rate:
                    format: float
                    type: number
                  charger:
                    $ref: '#/components/schemas/ChargerDTO'
                  cooler:
                    $ref: '#/components/schemas/CoolerDTO'
                  dramMemory:
                    $ref: '#/components/schemas/DRAMMemoryDTO'
                  graphicCard:
                    $ref: '#/components/schemas/GraphicCardDTO'
                  hardDrive:
                    $ref: '#/components/schemas/HardDriveDTO'
                  motherboard:
                    $ref: '#/components/schemas/MotherboardDTO'
                  pcCase:
                    $ref: '#/components/schemas/PcCaseDTO'
                  processor:
                    $ref: '#/components/schemas/ProcessorDTO'
                  opinions:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpinionDto'
  /store/addOpinion:
    post:
      tags:
      - Application Api
      description: add opinion to product
      operationId: addOpinion
      parameters:
      - name: opinion
        in: query
        schema:
          type: string
      - name: productId
        in: query
        schema:
          format: int64
          type: integer
      - name: rate
        in: query
        schema:
          format: float
          type: number
      responses:
        "204":
          description: NO CONTENT
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /store/addProductToBucket:
    post:
      tags:
      - Application Api
      description: add product to active bucket
      operationId: addProductToBucket
      parameters:
      - name: productId
        in: query
        schema:
          format: int64
          type: integer
      - name: quantity
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "204":
          description: NO CONTENT
        "304":
          description: NOT MODIFIED
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /store/create/order:
    post:
      tags:
      - Application Api
      description: create new order
      operationId: createOrder
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  ordered:
                    $ref: '#/components/schemas/Date'
                  delivered:
                    $ref: '#/components/schemas/Date'
                  status:
                    $ref: '#/components/schemas/Status'
                  totalPrice:
                    format: double
                    type: number
                  bucketId:
                    format: int64
                    type: integer
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /store/create/person:
    post:
      tags:
      - Application Api
      description: create new person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddressDTO'
  /store/removeOpinion:
    post:
      tags:
      - Application Api
      description: remove opinion from product
      operationId: removeOpinion
      parameters:
      - name: opinionId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: NO CONTENT
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /store/removeProductFromBucket:
    post:
      tags:
      - Application Api
      description: remove product from bucket
      operationId: removeProductFromBucket
      parameters:
      - name: productId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: NO CONTENT
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
  /store/updatePersonAddress:
    patch:
      tags:
      - Application Api
      description: "update person address by person id, if address not exists then\
        \ create new one"
      operationId: updatePersonAddressById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        "202":
          description: ACCEPTED
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    format: int64
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/AddressDTO'
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
components:
  schemas:
    Address:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        province:
          type: string
        zipCode:
          type: string
        streetName:
          type: string
        buildingNumber:
          type: string
        apartmentNumber:
          format: int32
          type: integer
    AddressDTO:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        province:
          type: string
        zipCode:
          type: string
        streetName:
          type: string
        buildingNumber:
          type: string
        apartmentNumber:
          format: int32
          type: integer
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Charger:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        power:
          type: string
        standard:
          type: string
        noise:
          format: int32
          type: integer
        coolingType:
          type: string
        width:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
        depth:
          format: int32
          type: integer
    ChargerDTO:
      type: object
      properties:
        power:
          type: string
        standard:
          type: string
        coolingType:
          type: string
        noise:
          format: int32
          type: integer
        width:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
        depth:
          format: int32
          type: integer
    Cooler:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        type:
          type: string
        maxRotationSpeed:
          format: int32
          type: integer
        maxVolume:
          format: int32
          type: integer
        supplyVoltage:
          format: int32
          type: integer
        coolerType:
          type: string
    CoolerDTO:
      type: object
      properties:
        type:
          type: string
        maxRotationSpeed:
          format: int32
          type: integer
        maxVolume:
          format: int32
          type: integer
        supplyVoltage:
          format: int32
          type: integer
        coolerType:
          type: string
    DRAMMemory:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        latencyCycle:
          type: string
        memory:
          format: int32
          type: integer
        memoryType:
          type: string
        frequency:
          type: string
    DRAMMemoryDTO:
      type: object
      properties:
        latencyCycle:
          type: string
        memoryType:
          type: string
        frequency:
          type: string
        memory:
          format: int32
          type: integer
    Date:
      format: date
      type: string
      example: 2022-03-10
    GraphicCard:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        memoryChipset:
          type: string
        memory:
          format: int32
          type: integer
        connectorType:
          type: string
        memoryType:
          type: string
        memoryClocking:
          type: string
    GraphicCardDTO:
      type: object
      properties:
        memoryChipset:
          type: string
        memory:
          format: int32
          type: integer
        connectorType:
          type: string
        memoryType:
          type: string
        memoryClocking:
          type: string
    HardDrive:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        memoryInterface:
          type: string
        memory:
          format: int32
          type: integer
        memoryType:
          type: string
    HardDriveDTO:
      type: object
      properties:
        memoryInterface:
          type: string
        memory:
          format: int32
          type: integer
        memoryType:
          type: string
    Motherboard:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        motherboardStandard:
          type: string
        processorSocket:
          type: string
        memoryType:
          type: string
        maxMemory:
          format: int32
          type: integer
    MotherboardDTO:
      type: object
      properties:
        motherboardStandard:
          type: string
        processorSocket:
          type: string
        memoryType:
          type: string
        maxMemory:
          format: int32
          type: integer
    OpinionDto:
      type: object
      properties:
        comment:
          type: string
        rate:
          format: float
          type: number
        username:
          type: string
        productId:
          format: int64
          type: integer
        bid:
          format: int64
          type: integer
    PcCase:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        width:
          format: double
          type: number
        length:
          format: double
          type: number
        depth:
          format: double
          type: number
    PcCaseDTO:
      type: object
      properties:
        width:
          format: double
          type: number
        length:
          format: double
          type: number
        depth:
          format: double
          type: number
    Person:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        name:
          type: string
        lastName:
          type: string
        addresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PersonDTO:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        username:
          type: string
        name:
          type: string
        lastName:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDTO'
    Processor:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        processorType:
          type: string
        socketType:
          type: string
        numberOfCores:
          format: int32
          type: integer
        numberOfThreads:
          format: int32
          type: integer
        l3Capacity:
          format: int32
          type: integer
    ProcessorDTO:
      type: object
      properties:
        processorType:
          type: string
        socketType:
          type: string
        numberOfCores:
          format: int32
          type: integer
        numberOfThreads:
          format: int32
          type: integer
        l3Capacity:
          format: int32
          type: integer
    Product:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        thumbnail:
          type: string
        pictures:
          type: string
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        name:
          type: string
        producer:
          type: string
        guarantee:
          type: string
        model:
          type: string
        price:
          format: double
          type: number
        quantity:
          format: int32
          type: integer
        productOrders:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductOrder'
        charger:
          $ref: '#/components/schemas/Charger'
        cooler:
          $ref: '#/components/schemas/Cooler'
        dramMemory:
          $ref: '#/components/schemas/DRAMMemory'
        graphicCard:
          $ref: '#/components/schemas/GraphicCard'
        hardDrive:
          $ref: '#/components/schemas/HardDrive'
        motherboard:
          $ref: '#/components/schemas/Motherboard'
        pcCase:
          $ref: '#/components/schemas/PcCase'
        processor:
          $ref: '#/components/schemas/Processor'
        rate:
          format: float
          type: number
        thumbnailAsByte:
          type: string
        picturesAsBytes:
          type: string
    ProductCategory:
      enum:
      - PROCESSOR
      - GRAPHIC_CARD
      - DRAM_MEMORY
      - MOTHERBOARD
      - COOLER
      - PC_CASE
      - HARD_DRIVE
      - CHARGER
      type: string
    ProductDTO:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        thumbnail:
          type: string
        pictures:
          type: string
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        name:
          type: string
        producer:
          type: string
        guarantee:
          type: string
        model:
          type: string
        price:
          format: double
          type: number
        quantity:
          format: int32
          type: integer
        rate:
          format: float
          type: number
        charger:
          $ref: '#/components/schemas/ChargerDTO'
        cooler:
          $ref: '#/components/schemas/CoolerDTO'
        dramMemory:
          $ref: '#/components/schemas/DRAMMemoryDTO'
        graphicCard:
          $ref: '#/components/schemas/GraphicCardDTO'
        hardDrive:
          $ref: '#/components/schemas/HardDriveDTO'
        motherboard:
          $ref: '#/components/schemas/MotherboardDTO'
        pcCase:
          $ref: '#/components/schemas/PcCaseDTO'
        processor:
          $ref: '#/components/schemas/ProcessorDTO'
        opinions:
          type: array
          items:
            $ref: '#/components/schemas/OpinionDto'
    ProductEnhancedSearchCriteria:
      type: object
      properties:
        bid:
          type: string
        productCategoryProperty:
          type: string
        name:
          type: string
        producer:
          type: string
        guarantee:
          type: string
        model:
          type: string
        price:
          type: string
        quantity:
          type: string
        rate:
          type: string
        power:
          type: string
        standard:
          type: string
        coolingType:
          type: string
        noise:
          type: string
        width:
          type: string
        height:
          type: string
        depth:
          type: string
        type:
          type: string
        maxRotationSpeed:
          type: string
        maxVolume:
          type: string
        supplyVoltage:
          type: string
        coolerType:
          type: string
        latencyCycle:
          type: string
        memoryType:
          type: string
        frequency:
          type: string
        memory:
          type: string
        memoryChipset:
          type: string
        connectorType:
          type: string
        memoryClocking:
          type: string
        memoryInterface:
          type: string
        motherboardStandard:
          type: string
        processorSocket:
          type: string
        maxMemory:
          type: string
        length:
          type: string
    ProductOrder:
      type: object
      properties:
        bid:
          format: int64
          type: integer
        quantityProductOrder:
          format: int32
          type: integer
        product:
          $ref: '#/components/schemas/Product'
    ProductOrderDTO:
      type: object
      properties:
        quantityProductOrder:
          format: int32
          type: integer
        productId:
          format: int64
          type: integer
        bucketId:
          format: int64
          type: integer
    ProductSearchCriteria:
      type: object
      properties:
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        name:
          type: string
        producer:
          type: string
        guarantee:
          type: string
        model:
          type: string
        price:
          type: string
        quantity:
          format: int32
          type: integer
    Role:
      enum:
      - ADMIN
      - USER
      - NOT_LOGGED
      type: string
    Status:
      enum:
      - IN_PROGRESS
      - DELIVERED
      - ON_THE_WAY
      type: string
